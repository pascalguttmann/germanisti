; Generated by kalamine on 2025-05-16

#NoEnv
#Persistent
#InstallKeybdHook
#SingleInstance,       force
#MaxThreadsBuffer
#MaxThreadsPerHotKey   3
#MaxHotkeysPerInterval 300
#MaxThreads            20

SendMode Event ; either Event or Input
SetKeyDelay,   -1
SetBatchLines, -1
Process, Priority, , R
SetWorkingDir, %A_ScriptDir%
StringCaseSense, On


;-------------------------------------------------------------------------------
; On/Off Switch
;-------------------------------------------------------------------------------

global Active := True

HideTrayTip() {
  TrayTip  ; Attempt to hide it the normal way.
  if SubStr(A_OSVersion,1,3) = "10." {
    Menu Tray, NoIcon
    Sleep 200  ; It may be necessary to adjust this sleep.
    Menu Tray, Icon
  }
}

ShowTrayTip() {
  title := "Germanisti"
  text := Active ? "ON" : "OFF"
  HideTrayTip()
  TrayTip, %title% , %text%, 1, 0x31
  SetTimer, HideTrayTip, -1500
}

RAlt & Alt::
Alt & RAlt::
  global Active
  Active := !Active
  ShowTrayTip()
  return

#If Active
SetTimer, ShowTrayTip, -1000  ; not working


;-------------------------------------------------------------------------------
; DeadKey Helpers
;-------------------------------------------------------------------------------

global DeadKey := ""

; Check CapsLock status, upper the char if needed and send the char
SendChar(char) {
  if % GetKeyState("CapsLock", "T") {
    if (StrLen(char) == 6) {
      ; we have something in the form of `U+NNNN `
      ; Change it to 0xNNNN so it can be passed to `Chr` function
      char := Chr("0x" SubStr(char, 3, 4))
    }
    StringUpper, char, char
  }
  Send, {%char%}
}

DoTerm(base:="") {
  global DeadKey

  term := SubStr(DeadKey, 2, 1)

  Send, {%term%}
  SendChar(base)
  DeadKey := ""
}

DoAction(action:="") {
  global DeadKey

  if (action == "U+0020") {
    Send, {SC39}
    DeadKey := ""
  }
  else if (StrLen(action) != 2) {
    SendChar(action)
    DeadKey := ""
  }
  else if (action == DeadKey) {
    DoTerm(SubStr(DeadKey, 2, 1))
  }
  else {
    DeadKey := action
  }
}

SendKey(base, deadkeymap) {
  if (!DeadKey) {
    DoAction(base)
  }
  else if (deadkeymap.HasKey(DeadKey)) {
    DoAction(deadkeymap[DeadKey])
  }
  else {
    DoTerm(base)
  }
}


;-------------------------------------------------------------------------------
; Base
;-------------------------------------------------------------------------------

;  Digits

 SC02::SendKey("U+0031", {}) ; 1
+SC02::SendKey("U+0021", {}) ; !

 SC03::SendKey("U+0032", {}) ; 2
+SC03::SendKey("U+0040", {}) ; @

 SC04::SendKey("U+0033", {}) ; 3
+SC04::SendKey("U+0023", {}) ; #

 SC05::SendKey("U+0034", {}) ; 4
+SC05::SendKey("U+0024", {}) ; $

 SC06::SendKey("U+0035", {}) ; 5
+SC06::SendKey("U+0025", {}) ; %

 SC07::SendKey("U+0036", {}) ; 6
+SC07::SendKey("U+005e", {}) ; ^

 SC08::SendKey("U+0037", {}) ; 7
+SC08::SendKey("U+0026", {}) ; &

 SC09::SendKey("U+0038", {}) ; 8
+SC09::SendKey("U+002a", {}) ; *

 SC0a::SendKey("U+0039", {}) ; 9
+SC0a::SendKey("U+0028", {}) ; (

 SC0b::SendKey("U+0030", {}) ; 0
+SC0b::SendKey("U+0029", {}) ; )

;  Letters, first row

 SC10::SendKey("U+0071", {}) ; q
+SC10::SendKey("U+0051", {}) ; Q

 SC11::SendKey("U+0077", {}) ; w
+SC11::SendKey("U+0057", {}) ; W

 SC12::SendKey("U+0065", {}) ; e
+SC12::SendKey("U+0045", {}) ; E

 SC13::SendKey("U+0072", {}) ; r
+SC13::SendKey("U+0052", {}) ; R

 SC14::SendKey("U+0074", {}) ; t
+SC14::SendKey("U+0054", {}) ; T

 SC15::SendKey("U+0079", {}) ; y
+SC15::SendKey("U+0059", {}) ; Y

 SC16::SendKey("U+0075", {}) ; u
+SC16::SendKey("U+0055", {}) ; U

 SC17::SendKey("U+0069", {}) ; i
+SC17::SendKey("U+0049", {}) ; I

 SC18::SendKey("U+006f", {}) ; o
+SC18::SendKey("U+004f", {}) ; O

 SC19::SendKey("U+0070", {}) ; p
+SC19::SendKey("U+0050", {}) ; P

;  Letters, second row

 SC1e::SendKey("U+0061", {}) ; a
+SC1e::SendKey("U+0041", {}) ; A

 SC1f::SendKey("U+0073", {}) ; s
+SC1f::SendKey("U+0053", {}) ; S

 SC20::SendKey("U+0064", {}) ; d
+SC20::SendKey("U+0044", {}) ; D

 SC21::SendKey("U+0066", {}) ; f
+SC21::SendKey("U+0046", {}) ; F

 SC22::SendKey("U+0067", {}) ; g
+SC22::SendKey("U+0047", {}) ; G

 SC23::SendKey("U+0068", {}) ; h
+SC23::SendKey("U+0048", {}) ; H

 SC24::SendKey("U+006a", {}) ; j
+SC24::SendKey("U+004a", {}) ; J

 SC25::SendKey("U+006b", {}) ; k
+SC25::SendKey("U+004b", {}) ; K

 SC26::SendKey("U+006c", {}) ; l
+SC26::SendKey("U+004c", {}) ; L

 SC27::SendKey("U+003b", {}) ; ;
+SC27::SendKey("U+003a", {}) ; :

;  Letters, third row

 SC2c::SendKey("U+007a", {}) ; z
+SC2c::SendKey("U+005a", {}) ; Z

 SC2d::SendKey("U+0078", {}) ; x
+SC2d::SendKey("U+0058", {}) ; X

 SC2e::SendKey("U+0063", {}) ; c
+SC2e::SendKey("U+0043", {}) ; C

 SC2f::SendKey("U+0076", {}) ; v
+SC2f::SendKey("U+0056", {}) ; V

 SC30::SendKey("U+0062", {}) ; b
+SC30::SendKey("U+0042", {}) ; B

 SC31::SendKey("U+006e", {}) ; n
+SC31::SendKey("U+004e", {}) ; N

 SC32::SendKey("U+006d", {}) ; m
+SC32::SendKey("U+004d", {}) ; M

 SC33::SendKey("U+002c", {}) ; ,
+SC33::SendKey("U+003c", {}) ; <

 SC34::SendKey("U+002e", {}) ; .
+SC34::SendKey("U+003e", {}) ; >

 SC35::SendKey("U+002f", {}) ; /
+SC35::SendKey("U+003f", {}) ; ?

;  Pinky keys

 SC0c::SendKey("U+002d", {}) ; -
+SC0c::SendKey("U+005f", {}) ; _

 SC0d::SendKey("U+003d", {}) ; =
+SC0d::SendKey("U+002b", {}) ; +

 SC1a::SendKey("U+005b", {}) ; [
+SC1a::SendKey("U+007b", {}) ; {

 SC1b::SendKey("U+005d", {}) ; ]
+SC1b::SendKey("U+007d", {}) ; }

 SC28::SendKey("U+0027", {}) ; '
+SC28::SendKey("U+0022", {}) ; "

 SC29::SendKey("U+0060", {}) ; `
+SC29::SendKey("U+007e", {}) ; ~

 SC2b::SendKey("U+005c", {}) ; \
+SC2b::SendKey("U+007c", {}) ; |

;  Space bar

 SC39::SendKey("U+0020", {}) ;  
+SC39::SendKey("U+0020", {}) ;  


;-------------------------------------------------------------------------------
; AltGr
;-------------------------------------------------------------------------------

;  Digits

 <^>!SC02::SendKey("U+00b9", {}) ; ¹
<^>!+SC02::SendKey("U+2081", {}) ; ₁

 <^>!SC03::SendKey("U+00b2", {}) ; ²
<^>!+SC03::SendKey("U+2082", {}) ; ₂

 <^>!SC04::SendKey("U+00b3", {}) ; ³
<^>!+SC04::SendKey("U+2083", {}) ; ₃

 <^>!SC05::SendKey("U+2074", {}) ; ⁴
<^>!+SC05::SendKey("U+2084", {}) ; ₄

 <^>!SC06::SendKey("U+2075", {}) ; ⁵
<^>!+SC06::SendKey("U+2085", {}) ; ₅

 <^>!SC07::SendKey("U+2076", {}) ; ⁶
<^>!+SC07::SendKey("U+2086", {}) ; ₆

 <^>!SC08::SendKey("U+2077", {}) ; ⁷
<^>!+SC08::SendKey("U+2087", {}) ; ₇

 <^>!SC09::SendKey("U+2078", {}) ; ⁸
<^>!+SC09::SendKey("U+2088", {}) ; ₈

 <^>!SC0a::SendKey("U+2079", {}) ; ⁹
<^>!+SC0a::SendKey("U+2089", {}) ; ₉

 <^>!SC0b::SendKey("U+2070", {}) ; ⁰
<^>!+SC0b::SendKey("U+2080", {}) ; ₀

;  Letters, first row

 <^>!SC10::SendKey("U+2200", {}) ; ∀
<^>!+SC10::SendKey("U+2205", {}) ; ∅

 <^>!SC11::SendKey("U+221e", {}) ; ∞
<^>!+SC11::SendKey("U+222b", {}) ; ∫

 <^>!SC12::SendKey("U+03b5", {}) ; ε
<^>!+SC12::SendKey("U+20ac", {}) ; €

 <^>!SC13::SendKey("U+03c1", {}) ; ρ
<^>!+SC13::SendKey("U+03a1", {}) ; Ρ

 <^>!SC14::SendKey("U+03c4", {}) ; τ
<^>!+SC14::SendKey("U+03a4", {}) ; Τ

 <^>!SC15::SendKey("U+03c5", {}) ; υ
<^>!+SC15::SendKey("U+03a5", {}) ; Υ

 <^>!SC16::SendKey("U+03b8", {}) ; θ
<^>!+SC16::SendKey("U+0398", {}) ; Θ

 <^>!SC17::SendKey("U+03b9", {}) ; ι
<^>!+SC17::SendKey("U+0399", {}) ; Ι

 <^>!SC18::SendKey("U+03bf", {}) ; ο
<^>!+SC18::SendKey("U+039f", {}) ; Ο

 <^>!SC19::SendKey("U+03c0", {}) ; π
<^>!+SC19::SendKey("U+03a0", {}) ; Π

;  Letters, second row

 <^>!SC1e::SendKey("U+03b1", {}) ; α
<^>!+SC1e::SendKey("U+0391", {}) ; Α

 <^>!SC1f::SendKey("U+03c3", {}) ; σ
<^>!+SC1f::SendKey("U+03a3", {}) ; Σ

 <^>!SC20::SendKey("U+03b4", {}) ; δ
<^>!+SC20::SendKey("U+0394", {}) ; Δ

 <^>!SC21::SendKey("U+03c6", {}) ; φ
<^>!+SC21::SendKey("U+03a6", {}) ; Φ

 <^>!SC22::SendKey("U+03b3", {}) ; γ
<^>!+SC22::SendKey("U+0393", {}) ; Γ

 <^>!SC23::SendKey("U+03b7", {}) ; η
<^>!+SC23::SendKey("U+0397", {}) ; Η

 <^>!SC24::SendKey("U+03be", {}) ; ξ
<^>!+SC24::SendKey("U+039e", {}) ; Ξ

 <^>!SC25::SendKey("U+03ba", {}) ; κ
<^>!+SC25::SendKey("U+039a", {}) ; Κ

 <^>!SC26::SendKey("U+03bb", {}) ; λ
<^>!+SC26::SendKey("U+039b", {}) ; Λ

 <^>!SC27::SendKey("U+00f6", {}) ; ö
<^>!+SC27::SendKey("U+00d6", {}) ; Ö

;  Letters, third row

 <^>!SC2c::SendKey("U+03b6", {}) ; ζ
<^>!+SC2c::SendKey("U+0396", {}) ; Ζ

 <^>!SC2d::SendKey("U+03c7", {}) ; χ
<^>!+SC2d::SendKey("U+03a7", {}) ; Χ

 <^>!SC2e::SendKey("U+03c8", {}) ; ψ
<^>!+SC2e::SendKey("U+03a8", {}) ; Ψ

 <^>!SC2f::SendKey("U+03c9", {}) ; ω
<^>!+SC2f::SendKey("U+03a9", {}) ; Ω

 <^>!SC30::SendKey("U+03b2", {}) ; β
<^>!+SC30::SendKey("U+0392", {}) ; Β

 <^>!SC31::SendKey("U+03bd", {}) ; ν
<^>!+SC31::SendKey("U+039d", {}) ; Ν

 <^>!SC32::SendKey("U+03bc", {}) ; μ
<^>!+SC32::SendKey("U+039c", {}) ; Μ

 <^>!SC33::SendKey("U+2264", {}) ; ≤
<^>!+SC33::SendKey("U+222a", {}) ; ∪

 <^>!SC34::SendKey("U+2265", {}) ; ≥
<^>!+SC34::SendKey("U+2229", {}) ; ∩

 <^>!SC35::SendKey("U+2208", {}) ; ∈
<^>!+SC35::SendKey("U+2209", {}) ; ∉

;  Pinky keys

 <^>!SC0c::SendKey("U+00df", {}) ; ß
<^>!+SC0c::SendKey("U+221a", {}) ; √

 <^>!SC0d::SendKey("U+2260", {}) ; ≠
<^>!+SC0d::SendKey("U+2248", {}) ; ≈

 <^>!SC1a::SendKey("U+00fc", {}) ; ü
<^>!+SC1a::SendKey("U+00dc", {}) ; Ü

 <^>!SC1b::SendKey("U+221d", {}) ; ∝

 <^>!SC28::SendKey("U+00e4", {}) ; ä
<^>!+SC28::SendKey("U+00c4", {}) ; Ä

 <^>!SC29::SendKey("U+00b0", {}) ; °

;  Space bar

 <^>!SC39::SendKey("U+0020", {}) ;  
<^>!+SC39::SendKey("U+0020", {}) ;  

; Special Keys

$<^>!Esc::       Send {SC01}
$<^>!End::       Send {SC4f}
$<^>!Home::      Send {SC47}
$<^>!Delete::    Send {SC53}
$<^>!Backspace:: Send {SC0e}


;-------------------------------------------------------------------------------
; Ctrl
;-------------------------------------------------------------------------------

;  Digits

;  Letters, first row

 ^SC10::Send  ^q
^+SC10::Send ^+Q

 ^SC11::Send  ^w
^+SC11::Send ^+W

 ^SC12::Send  ^e
^+SC12::Send ^+E

 ^SC13::Send  ^r
^+SC13::Send ^+R

 ^SC14::Send  ^t
^+SC14::Send ^+T

 ^SC15::Send  ^y
^+SC15::Send ^+Y

 ^SC16::Send  ^u
^+SC16::Send ^+U

 ^SC17::Send  ^i
^+SC17::Send ^+I

 ^SC18::Send  ^o
^+SC18::Send ^+O

 ^SC19::Send  ^p
^+SC19::Send ^+P

;  Letters, second row

 ^SC1e::Send  ^a
^+SC1e::Send ^+A

 ^SC1f::Send  ^s
^+SC1f::Send ^+S

 ^SC20::Send  ^d
^+SC20::Send ^+D

 ^SC21::Send  ^f
^+SC21::Send ^+F

 ^SC22::Send  ^g
^+SC22::Send ^+G

 ^SC23::Send  ^h
^+SC23::Send ^+H

 ^SC24::Send  ^j
^+SC24::Send ^+J

 ^SC25::Send  ^k
^+SC25::Send ^+K

 ^SC26::Send  ^l
^+SC26::Send ^+L

;  Letters, third row

 ^SC2c::Send  ^z
^+SC2c::Send ^+Z

 ^SC2d::Send  ^x
^+SC2d::Send ^+X

 ^SC2e::Send  ^c
^+SC2e::Send ^+C

 ^SC2f::Send  ^v
^+SC2f::Send ^+V

 ^SC30::Send  ^b
^+SC30::Send ^+B

 ^SC31::Send  ^n
^+SC31::Send ^+N

 ^SC32::Send  ^m
^+SC32::Send ^+M

;  Pinky keys

;  Space bar

